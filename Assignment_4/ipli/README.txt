Οδηγίες προγράμματος:
Το πρώτο πράγμα που ελέγχω πριν καλέσω την fopen είναι να δω αν έχει κληθεί μρ την επιλογή    -ν .Αν δίνεται η μεταβλητή η επιλογή  -ν αυξάνω μια μεταβλητή a που την έχω αρχικοποιήσει με 1.Έπειτα καλώ την fopen : 
        if ((fp = fopen(argv[a], "rb")) == NULL)   
όπου a είναι 1 ή 2 αναλόγως αν έχω βάλει την επιλογή -ν.
Διαβάζω το αρχείο για να μετρήσω το πλήθος των γραμμών και το αποθηκεύω μετά σε μια μεταβλητή n.
Με την rewind(fp) διαβάζω ξανά το αρχείο ώστε να αποθηκεύσω τις πληροφορίες κάθε γραμμής. Φτιάχνω έναν δυναμικό πίνακα δομών με n θέσεις .Η κάθε δομή έχει 3 μέλη. Στο πρώτο μέλος που είναι ένας ακέραιος (int n_tabs) αποθηκεύω το πλήθος με τον χαρακτήρα στηλογνώμονα.Στο δεύτερο μέλος που είναι επίσης ακέραιος (int line_no) αποθηκεύω τον αριθμό της γραμμής και τέλος μια αυτοαναφορική δομή που είναι λίστα για να αποθηκεύω τις λέξεις τις γραμμής.Έπειτα  φτιάχνω και έναν δεύτερο δυναμικό πίνακα δομών με n θέσεις για να διαχειρίζομαι τις μεταβλητές μου.  Η κάθε δομή έχει 3 μέλη. Στο πρώτο μέλος που είναι ένας ακέραιος (long int val) αποθηκεύω την τιμή της μεταβλητής και στο δεύτερό που είναι ένας δείκτης σε char όπου έχω αποθηκευμένο το όνομα της μεταβλητής (char *str).Αρχικοποιώ τον πίνακα με ‘\0’.Με την fgets αποθηκεύω σε έναν buf thn κάθε γραμμή.Σπάω την γραμμή για να πάρω τα tokens .Αρχικά μετράω τα tokens και αποθηκεύω το πλήθος.Αν η γραμμή μου έχει σχόλια # σπάω την επανάληψη και πάω στην επόμενη γραμμή.Ορίζω 2 πίνακες τον token1 και token2.Στον token1 αποθηκεύω γράμματα και αριθμούς ενώ στον token2 τους υπόλοιπους χαρακτήρες.Στις συνθήκες (δηλ αν είναι γράμματα ή αριθμοί κλπ)  όπου γεμίζω τον έναν απο τους δύο πίνακες πχ το token1 και αν ο άλλος πχ ο token2 είναι γεμάτος τον αποθηκεύω στον πίνακα , κάνω έναν ελέγχo αν είναι μεταβλητη, αυτό το κάνω με την check1 ελέγχω δηλ αν είναι ένα από τις εντολες πχ read, if, else, random κλπ, αν δεν είναι ένα απο αυτά είναι μεταβλητή.Έπειτα με την συνάρτηση check2 ελέγχω αν αυτή η μεταβλητή είναι συντακτικά ορθή αν όχι τερματίζω το πρόγραμμα.Έπειτα με την check 3 ελέγχω αν είναι ξανα αποθηκευμένη η μεταβλητή στον πίνακα.Αφού τελειώσω με την ανάγνωση και την αποθήκευση πάω να υλοποιήσω τον διερμηνέα.Διαβάζω κάθε γραμμή που είναι γραμμένη στον πίνακα.Εχω μια for όπυ ανακτώ τις πληροφορίες κάθε κόμβου.Ελέγχω με την check 4 αν πρόκειται για εντολές ή για μεταβλητές.Και ανάλογα το τι μου επιστρέφει εκτελώ την εντολή.

-Για την read: πηγαίνει στην συναρτηση read βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι ώστε μια μια scanf να ζητήσει έναν ακέραιο και να αντιστοιχίσει την τιμή με την σωστή μεταβλητή.

-Για την write: πηγαίνει στην συναρτηση write βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι την εκτυπώνει και εκτυπώνει και εναν κενό χαρακτήρα.

-Για την writeln: πηγαίνει στην συναρτηση writeln βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι την εκτυπώνει και εκτυπώνει και αλλαγή γραμμής.

-Για την if: πηγαίνει στην συναρτηση if_c βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι μετά ελέγχει με την check6 τον επόμενο κόμβο ποια συνθήκη είναι δηλ ==,!=, < κλπ.Επειτα υπολογίζει το πλήθος των γραμμών που έχει το σώμα της δηλ ποιες γραμμές έχουν μεγαλύτερο πλήθος tabs από από αυτήν.Καλεί μια συνάρτηση if_s που ανάλογα με την συνθήκη αν είναι αληθής κάνει την ίδια διαδικασία δηλ διερμηνεύει τις γραμμές.Αν είναι αληθής ελέγχει αν υπάρχει else και μετράει τις γραμμές που έχει το σώμα της else.Ώστε να επιστρέψει σε ποια σειρά είναι και απο κει να συνεχίσει.Η if_c και αυτή επιστρέφει σε ποια γραμμή είναι.  

-Για την while: πηγαίνει στην συναρτηση while_loop_cond βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι μετά ελέγχει με την check6 τον επόμενο κόμβο ποια συνθήκη είναι δηλ ==,!=, < κλπ.Επειτα υπολογίζει το πλήθος των γραμμών που έχει το σώμα της  δηλ ποιες γραμμές έχουν μεγαλύτερο πλήθος tabs από από αυτήν.Καλεί μια συνάρτηση while_loop που ανάλογα με την συνθήκη αν είναι αληθής κάνει την ίδια διαδικασία δηλ διερμηνεύει τις γραμμές.Αν είναι αληθής και βγει απο την for ξανα καλεί τον εαυτό της μέχρι να μην είναι αληθής και να βγει απο την while.Όμοια και αυτή επιστρέφει τον αριθμό της γραμμή που βρίσκεται

-Για την else: με μια continue απλώς πάει στην επόμενη εντολή.

-Για την random:πηγαίνει στην συναρτηση ran βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι και με την rand() της αναθέτει καινούρια τιμή.

-Για την argument size:πηγαίνει στην συναρτηση agc βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι και αυτή είναι ίση με την τιμή της argc.

-Για την argument:πηγαίνει στην συναρτηση arg βλέπει τον επόμενο κόμβο και με την check7 επιστρέφει την τιμή δηλ varint ανάλογα με τον αν έχει κληθεί ή όχι το -ν παίρνει με atoi το όρισμα.

-Για τις μεταβλητές: πηγαίνει στην συναρτηση variable βλέπει τον επόμενο κόμβο και με την check5 ελέγχει ποια μεταβλητή είναι έπειτα βλέπει ποιος τελεστης είναι αν ειναι το = και μετά από το var δεν ακολουθεί κάτι μπαίνει και με μια check5 ελέγχει αν είναι κάποια μεταβλητή αν όχι με μια check7 παίρνει τον αριθμό και τον αντιστοιχεί με την μεταβλητή.Αλλώς εξετάζει αν ο επόμενος κόμβο είναι αριθμό ή μεταβλητή έπειτα ποιος τελεστής είναι ο επόμενος κόμβος με την check6 και μετά πάλι ελέγχει αν είναι μεταβλητή ή αριθμός με την check5 αν είναι αριθμός πάει στην chack7 και παίρνει την αριθμητική τιμή γίνεται η πράξη και αντιστοιχίζεται η τιμή της στην μεταβλητή 

